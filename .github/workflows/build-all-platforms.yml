name: Build and Release All Platforms

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      platforms:
        description: 'Platforms to build (windows,macos,linux)'
        required: false
        default: 'windows,macos,linux'
        type: string

jobs:
  build-windows:
    runs-on: windows-latest
    if: contains(github.event.inputs.platforms, 'windows') || github.event_name != 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Build Windows installer
        run: npx electron-builder --win --publish never
        
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            release/**/*.exe
            release/**/*.msi
            release/**/*.zip
          retention-days: 30

  build-macos:
    runs-on: macos-latest
    if: contains(github.event.inputs.platforms, 'macos') || github.event_name != 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Build macOS installer
        run: npx electron-builder --mac --publish never
        
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            release/**/*.dmg
            release/**/*.zip
          retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    if: contains(github.event.inputs.platforms, 'linux') || github.event_name != 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Build Linux installer
        run: npx electron-builder --linux --publish never
        
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            release/**/*.AppImage
            release/**/*.deb
            release/**/*.rpm
            release/**/*.zip
          retention-days: 30

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/windows-installer/**/*
            artifacts/macos-installer/**/*
            artifacts/linux-installer/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release (Manual)
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          files: |
            artifacts/windows-installer/**/*
            artifacts/macos-installer/**/*
            artifacts/linux-installer/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 